- hosts: all
  become: yes
  roles:
    - export-kubectl-env
    - export-vexxhost-openrc
  tasks:
    - name: Set up Kubernetes local cluster
      shell:
        cmd: |
          set -x
          set -e
          set -o pipefail

          echo $kubectl
          echo $OS_AUTH_TYPE
          exit 1

          # Where csi provisioner reads instance id from
          INSTANCE_UUID=$(curl http://169.254.169.254/openstack/latest/meta_data.json | python -c "import sys, json; print json.load(sys.stdin)['uuid']")
          echo "$INSTANCE_UUID" > /var/lib/cloud/data/instance-id

          # Build latest images from source
          cat << EOF > Dockerfile
          # Based on centos
          FROM centos:7.4.1708
          LABEL maintainers="Kubernetes Authors"
          LABEL description="Cinder CSI Plugin"
          # Copy cinderplugin from build directory
          COPY cinder-csi-plugin /cinderplugin
          # Install e4fsprogs for format
          RUN yum -y install e4fsprogs
          # Define default command
          ENTRYPOINT ["/cinderplugin"]
          EOF
          docker build -t docker.io/k8scloudprovider/cinder-csi-plugin:latest .

          git clone https://github.com/kubernetes-csi/external-provisioner ${GOPATH}/src/github.com/kubernetes-csi/external-provisioner
          make -C ${GOPATH}/src/github.com/kubernetes-csi/external-provisioner container
          docker tag quay.io/k8scsi/csi-provisioner:canary docker.io/k8scsi/csi-provisioner:latest

          git clone https://github.com/kubernetes-csi/external-attacher ${GOPATH}/src/github.com/kubernetes-csi/external-attacher
          make -C ${GOPATH}/src/github.com/kubernetes-csi/external-attacher container
          docker tag quay.io/k8scsi/csi-attacher:canary docker.io/k8scsi/csi-attacher:latest

          git clone https://github.com/kubernetes-csi/driver-registrar ${GOPATH}/src/github.com/kubernetes-csi/driver-registrar
          make -C ${GOPATH}/src/github.com/kubernetes-csi/driver-registrar container
          docker tag quay.io/k8scsi/driver-registrar:canary docker.io/k8scsi/driver-registrar:latest

          # Replace custom cloud config
          {
              cloud_cfg=$(base64 -w 0 ${CLOUD_CONFIG})
              sed "s/cloud.conf.*$/cloud.conf: $cloud_cfg/g" -i manifests/cinder-csi-plugin/csi-secret-cinderplugin.yaml
          } > /dev/null 2>&1

          # Enable services
          "$kubectl" create -f manifests/cinder-csi-plugin
          sleep 5
          # If services up
          if kubectl="$kubectl" timeout 10 bash -c '
              while :
              do
                  "$kubectl" get pod | sed "1d" | awk '\''$2 != "2/2" || $3 != "Running" {err = 1} END {exit err}'\'' && break
                  sleep 1
              done
              '
          then
              echo 'Run services successful'
              "$kubectl" get pod
          else
              echo 'Run services failed'
              "$kubectl" get pod
              exit 1
          fi

          # Make test
          "$kubectl" create -f examples/cinder-csi-plugin/nginx.yaml
          # If test passed
          if kubectl="$kubectl" timeout 100 bash -c '
              while :
              do
                  [[ $("$kubectl" describe pod nginx | awk "/^Status:/ {print \$2}") == Running ]] && break
                  sleep 1
              done
              '
          then
              echo 'Run test successful'
              "$kubectl" get pod
          else
              echo 'Run test failed'
              "$kubectl" get pod
              "$kubectl" describe pod nginx
              "$kubectl" describe pvc csi-pvc-cinderplugin
              exit 1
          fi
        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
      environment: '{{ golang_env }}'
