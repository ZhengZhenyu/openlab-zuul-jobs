- hosts: all
  become: yes
  roles:
    - export-cloud-openrc
    - config-golang
  tasks:
    - name: Run integration tests of docker machine aganist {{ cloud_name }}
      block:
        - name: Install openstackclient
          shell: |
            set -ex
            pip install python-openstackclient
            pip install python-glanceclient==2.11.0
          args:
            executable: /bin/bash

        - name: Pre-create floating ips used by docker machine tests
          shell: |
            set -e
            fip1=$(openstack floating ip create admin_external_net -f value -c floating_ip_address)
            fip2=$(openstack floating ip create admin_external_net -f value -c floating_ip_address)
            fip3=$(openstack floating ip create admin_external_net -f value -c floating_ip_address)
            echo $fip1 $fip2 $fip3
          args:
            executable: /bin/bash
          environment: '{{ global_env }}'
          register: floating_ip_addrs

        - name: Run docker machine intetration tests
          shell:
            cmd: |
              set -ex
              set -o pipefail
              git clone https://github.com/sstephenson/bats.git
              pushd bats
              ./install.sh /usr/local
              popd

              apt-get install docker.io docker -y
              docker version

              mkdir -p $GOPATH/src/github.com/docker/machine
              cp -r '{{ ansible_user_dir }}/{{ zuul.project.src_dir }}' $GOPATH/src/github.com/docker/
              pushd $GOPATH/src/github.com/docker/machine
              make build
              cp ./bin/docker-machine /usr/local/bin/
              docker-machine version
              popd

              # Select a flavor have 2048M memory and 2 vCPU at least
              export OS_FLAVOR_ID=$(openstack flavor list -f value -c ID -c RAM -c VCPUs --sort-column RAM --sort-column \
                  VCPUs | awk '{if($2>=2048 && $3>=2){print $1}}' | head -n 1)
              export OS_IMAGE_NAME="Ubuntu 16.04 Server 64bit"
              export OS_TENANT_ID=$(openstack token issue -f value -c project_id)
              export OS_NETWORK_NAME=openlab-jobs-net
              export OS_FLOATINGIP_POOL="admin_external_net"
              export OS_SECURITY_GROUPS="openlab-jobs-sg"
              export OS_SSH_USER="{{ ssh_user | default('ubuntu') }}"

              pushd $GOPATH/src/github.com/docker/machine

              export DRIVER=openstack
              export BASE_TEST_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
              export MACHINE_ROOT="$BASE_TEST_DIR/../.."
              export MACHINE_STORAGE_PATH="/tmp/machine-bats-test-$DRIVER"
              export MACHINE_BIN_NAME=docker-machine
              export BATS_LOG="$MACHINE_ROOT/bats.log"
              export B2D_LOCATION=~/.docker/machine/cache/boot2docker.iso
              export SHARED_NAME="bats-$DRIVER-test-shared-$(date +%s)"
              export MACHINE_BUGSNAG_API_TOKEN=no-report

              function machine() {
                  "$MACHINE_ROOT"/bin/"$MACHINE_BIN_NAME" "$@"
              }
              export -f machine

              bats_tests=core-commands crashreport engine-options env_shell inspect_format regenerate-certs scp ssh-backends
              set +e
              EXIT_STATUS=0
              for tests in ${bats_tests};do
                  bats test/integration/core/${tests}.bats
                  if [[ $? -ne 0 ]]; then
                      EXIT_STATUS=1
                  fi
              set -e
              exit  ${EXIT_STATUS}
              popd
            executable: /bin/bash
          environment: '{{ global_env }}'

      always:
        - name: Cleanup resources
          shell: |
            set -ex
            export DRIVER=openstack
            export MACHINE_STORAGE_PATH="/tmp/machine-bats-test-$DRIVER"
            sleep 7200
            openstack floating ip delete $(echo "{{ floating_ip_addrs.stdout }}") || true
          args:
            executable: /bin/bash
          environment: '{{ global_env }}'
