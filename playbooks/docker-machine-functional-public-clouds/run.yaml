- hosts: all
  become: yes
  roles:
    - export-cloud-openrc
    - config-docker-machine
  tasks:
    - name: Run integration tests of docker machine aganist {{ cloud_name }}
      block:
        - name: Run docker machine intetration tests
          shell:
            cmd: |
              set -ex

              pip install python-openstackclient

              pushd '{{ ansible_user_dir }}/{{ zuul.project.src_dir }}'
              # Select a flavor have 2048M memory and 2 vCPU at least
              export OS_FLAVOR_ID=$(openstack flavor list -f value -c ID -c RAM -c VCPUs --sort-column RAM --sort-column \
                  VCPUs | awk '{if($2>=2048 && $3>=2){print $1}}' | head -n 1)
              export OS_IMAGE_NAME="Ubuntu 16.04 Server 64bit"
              export OS_SSH_USER="{{ ssh_user | default('ubuntu') }}"
              export OS_TENANT_ID=$(openstack token issue -f value -c project_id)
              export OS_NETWORK_NAME=openlab-jobs-net
              export OS_FLOATINGIP_POOL="admin_external_net"
              export OS_SECURITY_GROUPS="openlab-jobs-sg"

              unset OS_AVAILABILITY_ZONE
              unset OS_DOMAIN_ID

              export DRIVER=openstack
              export DEBUG=true
              export VERBOSE=true
              export BASE_TEST_DIR=$(realpath test/integration)
              export MACHINE_ROOT="$BASE_TEST_DIR/../.."
              export MACHINE_STORAGE_PATH="/tmp/machine-bats-test-$DRIVER"
              export MACHINE_BIN_NAME=docker-machine
              export BATS_LOG="$MACHINE_ROOT/bats.log"
              export B2D_LOCATION=~/.docker/machine/cache/boot2docker.iso
              export SHARED_NAME="bats-$DRIVER-test-shared-$(date +%s)"
              export MACHINE_BUGSNAG_API_TOKEN=no-report

              # Install bats
              git clone https://github.com/sstephenson/bats.git '{{ ansible_user_dir }}/bats'
              pushd '{{ ansible_user_dir }}/bats'
              ./install.sh /usr/local
              popd

              function machine() {
                  "$MACHINE_ROOT"/bin/"$MACHINE_BIN_NAME" "$@"
              }
              export -f machine
              EXIT_STATUS=0
              bats_tests="core-commands engine-options env_shell inspect_format regenerate-certs scp ssh-backends"
              for tests in ${bats_tests};do
                  echo "=> test/integration/core/${tests}.bats"
                  bats test/integration/core/${tests}.bats || EXIT_STATUS=1
              done
              popd
              exit  ${EXIT_STATUS}
            executable: /bin/bash
          environment: '{{ global_env }}'

      always:
        - name: Cleanup resources
          shell: |
            set -ex
            export DRIVER=openstack
            export MACHINE_STORAGE_PATH="/tmp/machine-bats-test-$DRIVER"
            for machine_name in $(docker-machine ls -q); do
                fip=$(docker-machine ip $machine_name) || true
                docker-machine rm -f $machine_name
                openstack server delete $machine_name || true
                openstack floating ip delete $fip || true
                openstack keypair delete `openstack keypair list -f value -c Name |grep $machine_name` || true
            done
          args:
            executable: /bin/bash
          environment: '{{ global_env }}'
