- hosts: all
  become: yes
  vars:
    sdk_ansible_tests_dirs:
      openstacksdk: '{{ ansible_user_dir }}/src/git.openstack.org/openstack/openstacksdk/openstack/tests/ansible'
      shade: '{{ ansible_user_dir }}/src/git.openstack.org/openstack-infra/shade/shade/tests/ansible'
  environment:
    OS_CLOUD: "{{ cloud_name }}"
  pre_tasks:
    - name: Setup cloud openrc
      include_role:
        name: export-cloud-openrc

    - name: Create clouds.yaml of {{ cloud_name }}
      shell:
        cmd: |
          mkdir -p /etc/openstack/
          cat << EOF >> /etc/openstack/clouds.yaml
          clouds:
            {{ cloud_name }}:
              auth:
                username: {{ global_env.OS_USERNAME }}
                password: {{ global_env.OS_PASSWORD }}
                auth_url: {{ global_env.OS_AUTH_URL }}
                project_name: {{ global_env.OS_PROJECT_NAME }}
                project_domain_name: {{ global_env.OS_DOMAIN_NAME }}
                user_domain_name: {{ global_env.OS_DOMAIN_NAME }}
              identity_api_version: {{ global_env.OS_IDENTITY_API_VERSION }}
          EOF
        executable: /bin/bash

    - name: Install dependencies
      pip: name=python-openstackclient

    # workaround bug introduced by https://review.openstack.org/#/c/568698/
    - name: Install python-glanceclient 2.11.1 (workaruond)
      pip:
        name: python-glanceclient
        version: 2.11.0

    - name: modify run.yml to allow ignoring errors per test case
      lineinfile:
        path: "{{ sdk_ansible_tests_dirs[os_sdk] }}/run.yml"
        insertafter: "^- hosts: localhost"
        line: "  ignore_errors: yes"

    - name: query flavor for testing
      shell: openstack flavor list -f value -c ID -c RAM -c VCPUs --sort-column RAM --sort-column VCPUs | head -n 1 | awk '{print $1}'
      args:
        executable: /bin/bash
      register: flavor_query

  roles:
    - ensure-tox
    - role: tox
      vars:
        tox_install_siblings: true
        zuul_work_dir: '{{ ansible_user_dir }}/{{ (zuul.projects.values() | selectattr("short_name", "equalto", os_sdk) | list)[0].src_dir }}'
        tox_envlist: ansible
        tox_extra_args: "-- -c {{ cloud_name }} auth group image keypair keystone keystone_role network nova_flavor object port router security_group server subnet user user_group volume"
        tox_environment:
          ANSIBLE_VAR_flavor: "{{ flavor_query.stdout }}"
          ANSIBLE_VAR_server_network: "ansible-testing-net"
