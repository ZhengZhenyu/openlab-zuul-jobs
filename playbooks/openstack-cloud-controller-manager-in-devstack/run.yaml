- hosts: all
  become: yes
  pre_tasks:
    - set_fact:
        instance_name: instance_1
        private_key: private_key_1
  roles:
    - clone-devstack-gate-to-workspace
    - create-devstack-local-conf
    - install-devstack
    - role: create-virtual-machines
      instance_name: '{{ instance_name }}'
      private_key: '{{ private_key }}'
  tasks:
    - shell:
        cmd: |
          set -e
          set -x
          set -o pipefail

          INSTANCE_NAME='{{ instance_name }}'
          PRIVATE_KEY='{{ private_key }}'

          # Get floating ip by instance name
          INSTANCE_ID=$(openstack server show "$INSTANCE_NAME" -f value -c id)
          PORT_ID=$(openstack port list --device-id "$INSTANCE_ID" -f value -c id)
          FLOATING_IP=$(openstack floating ip list --port "$PORT_ID" -f value -c 'Floating IP Address')

          # Prepare env on executing node
          go get github.com/Masterminds/glide
          make depend

          # Remove env contains 'short_source' which is a function defined by devstack for formating PS4
          export -p | grep -v short_source > exported-envs

          # Sync into instance
          for rsync_dir in "$GOPATH"/{src,bin,pkg} /usr/local/go
          do
              rsync -az -e "ssh -i $PRIVATE_KEY" --rsync-path "sudo mkdir -p $rsync_dir && sudo rsync" "$rsync_dir"/ "ubuntu@$FLOATING_IP:$rsync_dir"
          done

          # Run test inside instance
          ssh -i "$PRIVATE_KEY" "ubuntu@$FLOATING_IP" "
              set -x
              cd $PWD
              source exported-envs
              sudo apt update -y
              sudo apt install make -y
              TESTARGS='-v' make test 2>&1
          " | tee "$TEST_RESULTS_TXT"
        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
      environment: '{{ golang_env }}'
