- hosts: all
  become: yes
  vars:
    job_uid: '{{ zuul.build[:10] }}'
  roles:
    - export-cloud-openrc
  tasks:
    - name: workaround for fusioncloud domain name mapping
      shell:
        cmd: |
          cat << EOF >> /etc/hosts
          58.255.93.185 iam-apigateway-proxy.fusioncloud.huawei.com
          58.255.93.185 iam-cache-proxy.fusioncloud.huawei.com
          58.255.93.185 ecs-api.fusioncloud.huawei.com
          58.255.93.185 evs-api.fusioncloud.huawei.com
          58.255.93.185 vpc-api.fusioncloud.huawei.com
          58.255.93.185 bms-api.fusioncloud.huawei.com
          58.255.93.185 ccs-api.fusioncloud.huawei.com
          58.255.93.185 as-api.fusioncloud.huawei.com
          58.255.93.185 ims-api.fusioncloud.huawei.com
          58.255.93.185 rts-api.fusioncloud.huawei.com
          58.255.93.171 obs-api.fusioncloud.huawei.com
          EOF
        executable: /bin/bash

    - name: workaround for fusioncloud router name issue and external network
      shell: |
        sed -i '/OS::Neutron::Router/,+9s|{{ "{{" }} openshift_openstack_stack_name {{ "}}" }}|openshift-{{ job_uid }}|'  roles/openshift_openstack/templates/heat_stack.yaml.j2
        sed -i '/external_gateway_info/,+5s|{{ "{{" }} openshift_openstack_external_network_name {{ "}}" }}|dummy_external_network|'  roles/openshift_openstack/templates/heat_stack.yaml.j2
      args:
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/src/github.com/huaweicloud/openshift-ansible'

    - name: Copy cluster testing playbook under openshift-ansible
      become: yes
      copy:
        src: cluster-testing.yaml
        dest: '{{ ansible_user_dir }}/src/github.com/huaweicloud/openshift-ansible/cluster-testing.yaml'

    - name: Generate cloud specific extra vars for openshift cluster deployment
      become: yes
      template:
        dest: "{{ ansible_user_dir }}/src/github.com/huaweicloud/openshift-ansible/extra_vars.yml"
        src: "extra_vars.yml.j2"

    - name: Run Openshift functional tests against {{ cloud_name }}
      shell:
        cmd: |
          set -ex
          pip install ansible
          pip install jinja2
          pip install shade
          pip install jmespath
          pip install dnspython
          pip install python-openstackclient
          pip install python-heatclient
          pip install python-neutronclient

          openstack keypair create "openshift-{{ job_uid }}" > "openshift-{{ job_uid }}.pem"
          chmod 400 "openshift-{{ job_uid }}.pem"

          export ANSIBLE_HOST_KEY_CHECKING=false
          export OPENSHIFT_CLUSTER="openshift-{{ job_uid }}.openlab.com"
          sleep 7200

          # Check prerequisites
          ansible-playbook --user root \
              -i playbooks/openstack/inventory.py \
              -i "playbooks/openstack/{{ inventory_name }}-inventory" \
              --private-key "./openshift-{{ job_uid }}.pem" \
              playbooks/openstack/openshift-cluster/prerequisites.yml \
              -e @extra_vars.yml

          # Provision
          ansible-playbook --user root \
              -i playbooks/openstack/inventory.py \
              -i "playbooks/openstack/{{ inventory_name }}-inventory" \
              --private-key "./openshift-{{ job_uid }}.pem" \
              playbooks/openstack/openshift-cluster/provision.yml \
              -e @extra_vars.yml

          # WORKAROUND: pre-config hosts mapping for cluster servers
          ansible-playbook --user root \
              -i playbooks/openstack/inventory.py \
              -i "playbooks/openstack/{{ inventory_name }}-inventory" \
              --private-key "./openshift-{{ job_uid }}.pem"  \
              cluster_pre_config.yml \
              -e @extra_vars.yml

          # Install openshift cluster
          ansible-playbook --user root \
              -i playbooks/openstack/inventory.py \
              -i "playbooks/openstack/{{ inventory_name }}-inventory" \
              --private-key "./openshift-{{ job_uid }}.pem"  \
              playbooks/openstack/openshift-cluster/install.yml \
              -e @extra_vars.yml

          # Testing openshift cluster functionalities
          ansible-playbook --user root \
              -i playbooks/openstack/inventory.py \
              -i "playbooks/openstack/{{ inventory_name }}-inventory" \
              --private-key "./openshift-{{ job_uid }}.pem"  \
              cluster-testing.yaml \
              -e @extra_vars.yml
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/src/github.com/huaweicloud/openshift-ansible'
      environment: '{{ global_env }}'
