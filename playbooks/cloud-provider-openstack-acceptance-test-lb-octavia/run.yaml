- name: Set up Kubernetes local cluster
  hosts: all
  roles:
    - install-k8s-jobs-dependences
  become: yes
  tasks:
    - name: Set up Kubernetes local cluster
      shell:
        cmd: |
          set -e
          apt-get install python-pip -y
          pip install -U python-openstackclient

          # NOTE: the following commands may include sensitive information please do not print in job logs
          export OS_PASSWORD="`echo {{ telekom_credentials.password }}`"
          export OS_AUTH_TYPE="`echo {{ telekom_credentials.auth_type }}`"
          export OS_AUTH_URL="`echo {{ telekom_credentials.auth_url }}`"
          export OS_IDENTITY_API_VERSION="`echo {{ telekom_credentials.identity_api_version }}`"
          export OS_DOMAIN_NAME="`echo {{ telekom_credentials.domain_name }}`"
          export OS_PROJECT_NAME="`echo {{ telekom_credentials.project_name}}`"
          export OS_REGION_NAME="`echo {{ telekom_credentials.region_name}}`"
          export OS_TENANT_NAME="`echo {{ telekom_credentials.project_name }}`"
          export OS_USERNAME="`echo {{ telekom_credentials.user_name }}`"
          export OS_ACCESS_KEY="`echo {{ telekom_credentials.access_key }}`"
          export OS_SECRET_KEY="`echo {{ telekom_credentials.secret_key }}`"
          if [[ ! -d "/etc/kubernetes/" ]]; then
              sudo mkdir -p /etc/kubernetes/
          fi
          chown zuul /etc/kubernetes/
          cat << EOF >> /etc/kubernetes/cloud-config
          [Global]
          domain-name= ${OS_DOMAIN_NAME}
          tenant-name = ${OS_TENANT_NAME}
          auth-url = ${OS_AUTH_URL}
          password = ${OS_PASSWORD}
          username = ${OS_USERNAME}
          region = ${OS_REGION_NAME}
          [BlockStorage]
          bs-version = v2
          EOF

          set -x
          make depend
          make build
          mkdir -p "{{ ansible_user_dir }}/.kube"

        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
      environment: '{{ golang_env }}'