- hosts: all
  become: yes
  roles:
    - role: export-cloud-openrc
      vars:
        cloud_name: 'opentelekomcloud'
  tasks:
    - name: Run cloudfoundry acceptance tests of bosh-acceptance-tests
      shell:
        cmd: |
          set -x
          set -e
          set -o pipefail

          # Cloud provider specific variables
          NET_ID="134ca339-24dc-44f5-ae6a-cf0404216ed2"
          SUBNET_ID="3d6e9157-655f-42ec-9778-94d455730e5c"
          SMALL_FLAVOR="c1.medium" #1U1G
          MEDIUM_FLAVOR="c1.large" #2U2G
          LARGE_FLAVOR="c1.2xlarge" #8U8G

          pip install python-openstackclient
          curl -Lo ./bosh https://s3.amazonaws.com/bosh-cli-artifacts/bosh-cli-3.0.1-linux-amd64
          chmod +x ./bosh
          mv ./bosh /usr/local/bin/bosh
          bosh -v
          apt-get install -y build-essential zlibc zlib1g-dev ruby ruby-dev openssl libxslt-dev libxml2-dev libssl-dev libreadline6 libreadline6-dev libyaml-dev libsqlite3-dev sqlite3

          mkdir bosh-1 && cd bosh-1
          git clone https://github.com/cloudfoundry/bosh-deployment.git
          openstack keypair delete microbosh || true
          openstack keypair create microbosh > microbosh.pem
          if openstack security group list |grep bosh;then
              openstack security group create bosh --description 'BOSH Security Group'
              openstack security group rule create --protocol tcp --ingress bosh
          fi

          mkdir bosh-openstack-kvm-ubuntu-trusty-go_agent
          pushd bosh-openstack-kvm-ubuntu-trusty-go_agent
          wget --content-disposition https://bosh.io/d/stemcells/bosh-openstack-kvm-ubuntu-trusty-go_agent -O bosh-openstack-kvm-ubuntu-trusty-go_agent.tgz
          tar -zxvf bosh-openstack-kvm-ubuntu-trusty-go_agent.tgz
          rm bosh-openstack-kvm-ubuntu-trusty-go_agent.tgz
          sed -i 's/kvm/qemu/g' stemcell.MF
          tar -zcvf bosh-openstack-qemu-ubuntu-trusty-go_agent.tgz *
          mv bosh-openstack-qemu-ubuntu-trusty-go_agent.tgz ../
          popd

          sed -i 's|https://bosh.io/d/stemcells/.*$|file:///home/zuul/bosh-1/bosh-openstack-qemu-ubuntu-trusty-go_agent.tgz|' bosh-deployment/openstack/cpi.yml
          sed -i "s/m1.small/${SMALL_FLAVOR}/g" `grep m1.small -rl bosh-deployment/openstack`
          sed -i "s/m1.xlarge/${LARGE_FLAVOR}/g" `grep m1.xlarge -rl bosh-deployment/openstack`
          sed -i '/^.*human_readable_vm_names.*$/ a\ \ \ \ state_timeout: 300000' bosh-deployment/openstack/cpi.yml

          apt-get install ruby ruby-dev -y

          _port_id=$(openstack port create --network openlab-net bosh-port -f value -c id)
          bosh_ip=$(openstack port show ${_port_id} -f value -c fixed_ips | grep -Eo '([0-9]+\.){3}[0-9]+')
          openstack port delete ${_port_id}

          set +x
          bosh create-env bosh-deployment/bosh.yml \
              --state=state.json \
              --vars-store=creds.yml \
              -o bosh-deployment/openstack/cpi.yml \
              -v director_name=bosh-1 \
              -v internal_cidr=$( openstack subnet show ${SUBNET_ID} -f value -c cidr) \
              -v internal_gw=$( openstack subnet show ${SUBNET_ID} -f value -c gateway_ip) \
              -v internal_ip=${bosh_ip} \
              -v auth_url=${OS_AUTH_URL} \
              -v az=eu-de-02 \
              -v default_key_name=microbosh \
              -v default_security_groups=[bosh] \
              -v net_id=${NET_ID} \
              -v openstack_password=${OS_PASSWORD} \
              -v openstack_username=${OS_USERNAME} \
              -v openstack_domain=${OS_DOMAIN_NAME} \
              -v openstack_project=${OS_TENANT_NAME} \
              -v private_key=/home/zuul/bosh-1/microbosh.pem \
              -v region=${OS_REGION_NAME}
          set -x

          bosh alias-env bosh-1 -e ${bosh_ip} --ca-cert <(bosh int ./creds.yml --path /director_ssl/ca)
          export BOSH_CLIENT=admin
          export BOSH_CLIENT_SECRET=`bosh int ./creds.yml --path /admin_password`
          bosh -e bosh-1 env

          # path to the stemcell you want to use for testing
          export BAT_STEMCELL=/home/zuul/bosh-1/bosh-openstack-qemu-ubuntu-trusty-go_agent.tgz

          # path to the bat yaml file which is used to generate the deployment manifest (see below `bat.yml`)
          export BAT_DEPLOYMENT_SPEC=/home/zuul/bosh-1/bat.yml

          # BOSH CLI executable path
          export BAT_BOSH_CLI=bosh

          # DNS host or IP where BOSH-controlled PowerDNS server is running, which is required for the DNS tests. For example, if BAT is being run against a MicroBOSH then this value will be the same as BAT_DIRECTOR
          export BAT_DNS_HOST=8.8.8.8

          # the name of infrastructure that is used by bosh deployment. Examples: aws, vsphere, openstack, warden, oci.
          export BAT_INFRASTRUCTURE=openstack

          # the type of networking being used: `dynamic` or `manual`.
          export BAT_NETWORKING=manual

          # the path to ssh key, used by OS specs to ssh into BOSH VMs
          export BAT_PRIVATE_KEY=/home/zuul/bosh-1/microbosh.pem

          # Run tests with --fail-fast and skip cleanup in case of failure (optional)
          export BAT_DEBUG_MODE=true

          export BOSH_OS_BATS=true

          export BOSH_ENVIRONMENT=bosh-1
          # export BOSH_CLIENT=<director username>
          # export BOSH_CLIENT_SECRET=<director password>
          # export BOSH_CA_CERT=<director ca cert content or path>
          cat << EOF >> bat.yml
          ---
          cpi: openstack
          properties:
            stemcell:
              name: bosh-openstack-qemu-ubuntu-trusty-go_agent
              version: latest
            pool_size: 1
            instances: 1
            instance_type: ${SMALL_FLAVOR}
            availability_zone: ${OS_AVAILABILITY_ZONE}
            flavor_with_no_ephemeral_disk: ${MEDIUM_FLAVOR}
            vip: 0.0.0.43 # Virtual (public/floating) IP assigned to the bat-release job vm ('static' network), for ssh testing
            networks:
            - name: default
              type: dynamic
              cloud_properties:
                net_id: ${NET_ID} # Network ID
                security_groups: ['bosh'] # security groups assigned to deployed VMs
            key_name: microbosh # (optional) SSH keypair name, overrides the director's default_key_name setting
          EOF

          pushd bosh-acceptance-tests/
          gem install bundler
          bundle install
          bundle exec rspec spec --tag ~vip_networking --tag ~dynamic_networking --tag ~root_partition --tag ~raw_ephemeral_storage
          popd

        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}'
