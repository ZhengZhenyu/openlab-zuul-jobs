- hosts: all
  become: yes
  roles:
    - install-docker-ce
  tasks:
    - name: Test functionalities of Spark deployed on k8s cluster
      shell: |
        set -ex
        # install java8
        apt-get install openjdk-8-jdk -y
        sed -i -e '/127.0.0.1/ s/\(localhost\)/'$(hostname)' \1/' /etc/hosts
        export JAVA_HOME=$(dirname $(dirname $(update-alternatives --list javac)))

        # NOTE: the distribution step may fail due to dependencies downloading failure, so we suport retry
        for i in $(seq 1 3); do ./dev/make-distribution.sh --tgz -Pkubernetes && s=0 && break || s=$? && sleep 5; done; (exit $s)

        # Download minikube binary
        curl -Lo /usr/local/bin/minikube https://storage.googleapis.com/minikube/releases/v0.34.1/minikube-linux-amd64
        chmod +x /usr/local/bin/minikube

        # Start k8s cluster by minikube
        sed -i 's/nameserver 127.0.0.1/nameserver 8.8.8.8/' /etc/resolv.conf
        # Change the docker cgroup driver to cgroupfs as it is the default choice of kubelet
        sed -i 's/systemd/cgroupfs/' /etc/docker/daemon.json
        systemctl restart docker

        minikube start --cpus 4 --memory 6144 --vm-driver=none

        # Install kubectl
        sudo apt-get update && sudo apt-get install -y apt-transport-https
        curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
        echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
        sudo apt-get update
        sudo apt-get install -y kubectl

        # Create required account in k8s
        kubectl create serviceaccount spark
        kubectl create clusterrolebinding spark-role --clusterrole=edit --serviceaccount=default:spark --namespace=default

        pushd resource-managers/kubernetes/integration-tests
        dev/dev-run-integration-tests.sh --deploy-mode minikube --spark-master k8s://$(kubectl config view -o jsonpath='{.clusters[0].cluster.server}') --spark-tgz '{{ ansible_user_dir }}/{{ zuul.project.src_dir }}/spark-3.0.0-SNAPSHOT-bin-2.7.4.tgz' --image-repo kubespark --namespace default --service-account spark
        popd
      args:
        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
