# gophercloud
- name: create devstack local conf with {{ os_branch }} for {{ sdk }}
  shell:
    cmd: |
      set -e
      set -x
      cat << EOF >> /tmp/dg-local.conf
      [[local|localrc]]
      MANILA_BACKEND1_CONFIG_GROUP_NAME=london
      MANILA_BACKEND2_CONFIG_GROUP_NAME=paris
      MANILA_SHARE_BACKEND1_NAME=LONDON
      MANILA_SHARE_BACKEND2_NAME=PARIS
      MANILA_OPTGROUP_london_driver_handles_share_servers=True
      MANILA_OPTGROUP_paris_driver_handles_share_servers=True
      MANILA_USE_SERVICE_INSTANCE_PASSWORD=True
      MANILA_USE_DOWNGRADE_MIGRATIONS=True
      MANILA_MULTI_BACKEND=True
      MANILA_ADMIN_NET_RANGE=10.2.5.0/24
      MANILA_DATA_NODE_IP=10.2.5.0/24
      MANILA_DATA_COPY_CHECK_HASH=True
      MANILA_SHARE_MIGRATION_PERIOD_TASK_INTERVAL=1
      SHARE_DRIVER=manila.share.drivers.generic.GenericShareDriver
      MANILA_SERVICE_IMAGE_ENABLED=True
      MANILA_DEFAULT_SHARE_TYPE_EXTRA_SPECS='snapshot_support=True create_share_from_snapshot_support=True'

      enable_plugin heat git://git.openstack.org/openstack/heat
      enable_plugin manila git://git.openstack.org/openstack/manila
      EOF
    executable: /bin/bash
    chdir: '{{ ansible_user_dir }}/workspace'
  environment: '{{ zuul | zuul_legacy_vars }}'
  when:
    - sdk == 'gophercloud'
    - os_branch in stable_branches

- name: create devstack local conf with {{ os_branch }} for {{ sdk }}
  shell:
    cmd: |
      set -e
      set -x
      cat << EOF >> /tmp/dg-local.conf
      [[local|localrc]]
      # Default value is 2.0 in Mitaka, and 2.0 API will be deprecated
      # in the future, test against V3 API in stead.
      IDENTITY_API_VERSION=3
      OS_USER_DOMAIN_ID=default
      OS_PROJECT_DOMAIN_ID=default
      EOF
    executable: /bin/bash
    chdir: '{{ ansible_user_dir }}/workspace'
  environment: '{{ zuul | zuul_legacy_vars }}'
  when:
    - sdk == 'gophercloud'
    - os_branch in eol_branches

# terraform-provider-openstack
- name: create devstack local conf with {{ os_branch }} for {{ sdk }}
  shell:
    cmd: |
      set -e
      set -x
      cat << EOF >> /tmp/dg-local.conf
      [[local|localrc]]
      NETWORK_GATEWAY=10.0.0.1
      # Enable trove
      # enable_service trove tr-api tr-tmgr tr-cond
      # enable_plugin trove git://git.openstack.org/openstack/trove
      # Enable designate
      enable_service designate,designate-central,designate-api,designate-pool-manager,designate-zone-manager,designate-mdns
      enable_plugin designate git://git.openstack.org/openstack/designate
      EOF
    executable: /bin/bash
    chdir: '{{ ansible_user_dir }}/workspace'
  environment: '{{ zuul | zuul_legacy_vars }}'
  when:
    - sdk == 'terraform-provider-openstack'
    - os_branch in stable_branches

- name: create devstack local conf with {{ os_branch }} for {{ sdk }}
  shell:
    cmd: |
      set -e
      set -x
      cat << EOF >> /tmp/dg-local.conf
      [[local|localrc]]
      NETWORK_GATEWAY=10.0.0.1
      # Default value is 2.0 in Mitaka, and 2.0 API will be deprecated
      # in the future, test against V3 API in stead.
      IDENTITY_API_VERSION=3
      export OS_USER_DOMAIN_ID=default
      export OS_PROJECT_DOMAIN_ID=default
      EOF
    executable: /bin/bash
    chdir: '{{ ansible_user_dir }}/workspace'
  environment: '{{ zuul | zuul_legacy_vars }}'
  when:
    - sdk == 'terraform-provider-openstack'
    - os_branch in eol_branches

# terraform
- name: create devstack local conf with {{ os_branch }} for {{ sdk }}
  shell:
    cmd: |
      set -e
      set -x
      cat << EOF >> /tmp/dg-local.conf
      [[local|localrc]]
      # pass
      EOF
    executable: /bin/bash
    chdir: '{{ ansible_user_dir }}/workspace'
  environment: '{{ zuul | zuul_legacy_vars }}'
  when:
    - sdk == 'terraform'
    - os_branch in stable_branches
